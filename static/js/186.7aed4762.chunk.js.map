{"version":3,"file":"static/js/186.7aed4762.chunk.js","mappings":"iMAqCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,UAAWP,GACnBA,IACFQ,EAAAA,EAAAA,IAAa,CAAEC,SAAUT,IACtBU,MAAK,SAAAC,GACJL,QAAQC,IAAII,GACZP,EAAeO,EAASC,SAEzBC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAMD,QAC/B,CAACd,KAGF,wBACGG,GAAeA,EAAYa,QAAQC,OAAS,EAC3Cd,EAAYa,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACrC,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,OAOb,yE,iOC7BFG,EAAU,mCAEHC,EAAc,kCAIpB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,IAD/B,kBAGoBK,IAAAA,IAAU,sBAAuBF,GAHrD,cAGGd,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,gGAA4BnB,EAA5B,EAA4BA,SAC3BgB,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,IAD/B,kBAGoBK,IAAAA,IAAA,iBAAoBlB,GAAYgB,GAHpD,cAGGd,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,gGAA2BpB,EAA3B,EAA2BA,SAC1BgB,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,IAD/B,kBAGoBK,IAAAA,IAAA,iBAAoBlB,EAApB,YAAwCgB,GAH5D,cAGGd,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,gGAA8BC,EAA9B,EAA8BA,SAC7BgB,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,IAD/B,kBAGoBK,IAAAA,IAAA,iBAAoBlB,EAApB,YAAwCgB,GAH5D,cAGGd,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,gGAA8BC,EAA9B,EAA8BA,MAC7BN,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,EAASS,MAAAA,IADxC,kBAGoBJ,IAAAA,IAAA,gBAA2BF,GAH/C,cAGGd,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFA1CPY,IAAAA,SAAAA,QAHqB","sources":["components/Reviews/Reviews.jsx","services/api-movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api-movies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState();\n\n  useEffect(() => {\n    console.log('movieId', movieId);\n    if (movieId)\n      fetchReviews({ movie_id: movieId })\n        .then(response => {\n          console.log(response);\n          setReviewsData(response.data);\n        })\n        .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviewsData && reviewsData.results.length > 0 ? (\n        reviewsData.results.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <h3>We don't have any reviews for this movie</h3>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nexport async function fetchTrending() {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get('/trending/movie/day', params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchMovie({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchCast({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}/credits`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchReviews({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function searchMovies({ query }) {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios.get(`/search/movie`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n"],"names":["movieId","useParams","useState","reviewsData","setReviewsData","useEffect","console","log","fetchReviews","movie_id","then","response","data","catch","err","error","results","length","map","id","author","content","API_KEY","API_IMG_URL","fetchTrending","params","api_key","axios","fetchMovie","fetchCast","searchMovies","query"],"sourceRoot":""}