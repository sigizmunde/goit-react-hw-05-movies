{"version":3,"file":"static/js/304.3b815aeb.chunk.js","mappings":"yMAEaA,E,QAAOC,GAAAA,GAAH,mE,SC8BjB,EA5BkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,EAAOG,OAAS,GACfH,EAAOI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,SACGK,KAFID,U,uHCVRK,E,QAAKX,GAAAA,GAAH,4C,SCkBf,EAfa,WACX,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,MAAK,SAAAC,GAAQ,OAAIJ,EAAUI,EAASC,KAAKC,cACxD,KAGD,gCACE,SAACR,EAAD,8BACA,SAACS,EAAA,EAAD,CAAWnB,OAAQA,S,iOCbnBoB,EAAU,mCAEHC,EAAc,kCAIpB,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,6FACCQ,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAU,sBAAuBF,GAHrD,cAGGN,EAHH,yBAIIA,GAJJ,gCAMHS,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,gGAA4BC,EAA5B,EAA4BA,SAC3BN,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAA,iBAAoBI,GAAYN,GAHpD,cAGGN,EAHH,yBAIIA,GAJJ,gCAMHS,QAAQC,MAAR,MANG,gFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,gGAA2BD,EAA3B,EAA2BA,SAC1BN,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAA,iBAAoBI,EAApB,YAAwCN,GAH5D,cAGGN,EAHH,yBAIIA,GAJJ,gCAMHS,QAAQC,MAAR,MANG,gFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,gGAA8BF,EAA9B,EAA8BA,SAC7BN,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAA,iBAAoBI,EAApB,YAAwCN,GAH5D,cAGGN,EAHH,yBAIIA,GAJJ,gCAMHS,QAAQC,MAAR,MANG,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,gGAA8BC,EAA9B,EAA8BA,MAC7BV,EAAS,CAAEA,OAAQ,CAAEC,QAASH,EAASY,MAAAA,IADxC,kBAGoBR,IAAAA,IAAA,gBAA2BF,GAH/C,cAGGN,EAHH,yBAIIA,GAJJ,gCAMHS,QAAQC,MAAR,MANG,gFA1CPF,IAAAA,SAAAA,QAHqB","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  font-size: 16px;\n  list-style: inside;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.length > 0 &&\n        movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const H2 = styled.h2`\n  font-size: 18px;\n`;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { fetchTrending } from 'services/api-movies';\nimport { H2 } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrending().then(response => setMovies(response.data.results));\n  }, []);\n\n  return (\n    <section>\n      <H2>Trending today</H2>\n      <MovieList movies={movies} />\n    </section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nexport async function fetchTrending() {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get('/trending/movie/day', params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchMovie({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchCast({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}/credits`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchReviews({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function searchMovies({ query }) {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios.get(`/search/movie`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n"],"names":["List","styled","movies","location","useLocation","length","map","id","title","to","state","from","H2","useState","setMovies","useEffect","fetchTrending","then","response","data","results","MovieList","API_KEY","API_IMG_URL","params","api_key","axios","console","error","fetchMovie","movie_id","fetchCast","fetchReviews","searchMovies","query"],"sourceRoot":""}