{"version":3,"file":"static/js/387.e97ba1a9.chunk.js","mappings":"0OAEaA,E,QAAWC,GAAAA,GAAH,oP,SCsCrB,EAnCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,UAAWP,GACnBA,IACFQ,EAAAA,EAAAA,GAAU,CAAEC,SAAUT,IACnBU,MAAK,SAAAC,GACJL,QAAQC,IAAII,GACZP,EAAYO,EAASC,SAEtBC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAMD,QAC/B,CAACd,KAGF,SAACF,EAAD,UACGK,GACCA,EAASa,KAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,OACE,0BACGA,IACC,gBAAKC,IAAKC,EAAAA,GAAcF,EAAcG,IAAKL,KAE7C,wBAAKA,KACL,wCACa,0BAAOC,SANbF,U,iOCvBfO,EAAU,mCAEHF,EAAc,kCAIpB,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAU,sBAAuBF,GAHrD,cAGGhB,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,gGAA4BrB,EAA5B,EAA4BA,SAC3BkB,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAA,iBAAoBpB,GAAYkB,GAHpD,cAGGhB,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,gGAA2BC,EAA3B,EAA2BA,SAC1BkB,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAA,iBAAoBpB,EAApB,YAAwCkB,GAH5D,cAGGhB,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,gGAA8BtB,EAA9B,EAA8BA,SAC7BkB,EAAS,CAAEA,OAAQ,CAAEC,QAASH,IAD/B,kBAGoBI,IAAAA,IAAA,iBAAoBpB,EAApB,YAAwCkB,GAH5D,cAGGhB,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFAUA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,gGAA8BC,EAA9B,EAA8BA,MAC7BN,EAAS,CAAEA,OAAQ,CAAEC,QAASH,EAASQ,MAAAA,IADxC,kBAGoBJ,IAAAA,IAAA,gBAA2BF,GAH/C,cAGGhB,EAHH,yBAIIA,GAJJ,gCAMHL,QAAQS,MAAR,MANG,gFA1CPc,IAAAA,SAAAA,QAHqB","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  & li:not(:last-child) {\n    margin-bottom: 36px;\n  }\n  & img {\n    max-height: 250px;\n  }\n  & h3 {\n    margin-top: 12px;\n    margin-bottom: 8px;\n  }\n  & p {\n    margin-top: 0;\n    margin-bottom: 8px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API_IMG_URL, fetchCast } from 'services/api-movies';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState();\n\n  useEffect(() => {\n    console.log('movieId', movieId);\n    if (movieId)\n      fetchCast({ movie_id: movieId })\n        .then(response => {\n          console.log(response);\n          setCastData(response.data);\n        })\n        .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {castData &&\n        castData.cast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              {profile_path && (\n                <img src={API_IMG_URL + profile_path} alt={name} />\n              )}\n              <h3>{name}</h3>\n              <p>\n                Character: <span>{character}</span>\n              </p>\n            </li>\n          );\n        })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nexport async function fetchTrending() {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get('/trending/movie/day', params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchMovie({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchCast({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}/credits`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function fetchReviews({ movie_id }) {\n  const params = { params: { api_key: API_KEY } };\n  try {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function searchMovies({ query }) {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios.get(`/search/movie`, params);\n    return response;\n  } catch (err) {\n    console.error(err);\n  }\n}\n"],"names":["CastList","styled","movieId","useParams","useState","castData","setCastData","useEffect","console","log","fetchCast","movie_id","then","response","data","catch","err","error","cast","map","id","name","character","profile_path","src","API_IMG_URL","alt","API_KEY","fetchTrending","params","api_key","axios","fetchMovie","fetchReviews","searchMovies","query"],"sourceRoot":""}